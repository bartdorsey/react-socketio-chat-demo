{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/james/Desktop/socket-io/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // Redux\n// import { useDispatch, useSelector } from 'react-redux';\n// import { addMessage } from './store/actions';\n\nimport io from 'socket.io-client';\nconst socket = io.connect('http://localhost:4000');\n\nfunction App() {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [chat, setChat] = useState([]); // Redux\n  // const dispatch = useDispatch();\n  // const messages = Object.values(useSelector(state => state.messages));\n\n  useEffect(() => {\n    socket.on('message', msg => {\n      setChat([...chat, msg]);\n    });\n  }); // Redux\n  // useEffect(() => {\n  //   socket.on('message', msg => {\n  //     dispatch(addMessage(msg));\n  //   })\n  // })\n\n  const onChange = e => {\n    setMessage(e.target.value);\n  }; // Redux\n  // const onChange = e => {\n  //   e.preventDefault();\n  //   setMessage(e.target.value);\n  // }\n\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    socket.emit('message', message);\n    const res = await fetch('http://localhost:4000/messages', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(message)\n    });\n    let thing = await res.json();\n    console.log(thing);\n    setMessage('');\n  };\n\n  const daChat = () => {\n    return chat.map((message, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"YOYOYOOYOY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onChange,\n        type: \"text\",\n        value: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"HEY LOOK IT'S WORDS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), daChat()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fi/IGQg4eRn1At1LK6QvoIC5kKc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/james/Desktop/socket-io/frontend/src/App.js"],"names":["React","useState","useEffect","io","socket","connect","App","message","setMessage","chat","setChat","on","msg","onChange","e","target","value","onSubmit","preventDefault","emit","res","fetch","method","headers","body","JSON","stringify","thing","json","console","log","daChat","map","i"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;AACA;AACA;;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,MAAMC,MAAM,GAAGD,EAAE,CAACE,OAAH,CAAW,uBAAX,CAAf;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC,CAFa,CAGb;AACA;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,MAAM,CAACO,EAAP,CAAU,SAAV,EAAqBC,GAAG,IAAI;AAC1BF,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUG,GAAV,CAAD,CAAP;AACD,KAFD;AAGD,GAJQ,CAAT,CAPa,CAab;AACA;AACA;AACA;AACA;AACA;;AAGA,QAAMC,QAAQ,GAAGC,CAAC,IAAI;AACpBN,IAAAA,UAAU,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,GAFD,CArBa,CAyBb;AACA;AACA;AACA;AACA;;;AAEA,QAAMC,QAAQ,GAAG,MAAMH,CAAN,IAAW;AAC1BA,IAAAA,CAAC,CAACI,cAAF;AACAd,IAAAA,MAAM,CAACe,IAAP,CAAY,SAAZ,EAAuBZ,OAAvB;AACA,UAAMa,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAD,EAAmC;AACxDC,MAAAA,MAAM,EAAE,MADgD;AAExDC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF+C;AAKxDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAenB,OAAf;AALkD,KAAnC,CAAvB;AAOA,QAAIoB,KAAK,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAnB,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAbD;;AAeA,QAAMuB,MAAM,GAAG,MAAM;AACnB,WAAOtB,IAAI,CAACuB,GAAL,CAAS,CAACzB,OAAD,EAAU0B,CAAV,KAAgB;AAC9B,0BAAO;AAAA,+BACL;AAAA,oBAAM1B;AAAN;AAAA;AAAA;AAAA;AAAA;AADK,SAAU0B,CAAV;AAAA;AAAA;AAAA;AAAA,cAAP;AAGD,KAJM,CAAP;AAKD,GAND;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAM,MAAA,QAAQ,EAAEhB,QAAhB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,QAAQ,EAAEJ,QAAjB;AAA2B,QAAA,IAAI,EAAC,MAAhC;AAAuC,QAAA,KAAK,EAAEN;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGwB,MAAM,EAFT;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAlEQzB,G;;KAAAA,G;AAoET,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n// Redux\n// import { useDispatch, useSelector } from 'react-redux';\n// import { addMessage } from './store/actions';\nimport io from 'socket.io-client';\n\nconst socket = io.connect('http://localhost:4000');\n\n\nfunction App() {\n  const [message, setMessage] = useState('')\n  const [chat, setChat] = useState([]);\n  // Redux\n  // const dispatch = useDispatch();\n  // const messages = Object.values(useSelector(state => state.messages));\n\n  useEffect(() => {\n    socket.on('message', msg => {\n      setChat([...chat, msg]);\n    })\n  })\n\n  // Redux\n  // useEffect(() => {\n  //   socket.on('message', msg => {\n  //     dispatch(addMessage(msg));\n  //   })\n  // })\n\n\n  const onChange = e => {\n    setMessage(e.target.value);\n  }\n\n  // Redux\n  // const onChange = e => {\n  //   e.preventDefault();\n  //   setMessage(e.target.value);\n  // }\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    socket.emit('message', message)\n    const res = await fetch('http://localhost:4000/messages', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(message)\n    });\n    let thing = await res.json();\n    console.log(thing);\n    setMessage('');\n  }\n\n  const daChat = () => {\n    return chat.map((message, i) => {\n      return <div key={i}>\n        <pre>{message}</pre>\n      </div>\n    })\n  }\n  return (\n    <div className=\"app\">\n      <form onSubmit={onSubmit}>\n        <h1>YOYOYOOYOY</h1>\n        <input onChange={onChange} type=\"text\" value={message}></input>\n        <button type=\"submit\">Send</button>\n      </form>\n      <div>\n        <h1>HEY LOOK IT'S WORDS</h1>\n        {daChat()}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}